{"version":3,"sources":["logo.svg","Redux/authAction.js","Redux/actionType.js","Auth/Login.jsx","Container/Table.jsx","Container/Home.jsx","Container/AddMeeting.jsx","Redux/meetingAction.js","Container/BookingPage.jsx","routes/Routes.js","Redux/authReducer.js","Redux/meetingReducer.js","Redux/rootReducer.js","Redux/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","loginReguest","type","login_auth","item","console","log","dispatch","axios","post","username","name","password","pass","then","data","token","alert","payload","loginSuccess","catch","err","message","connect","state","auth","isAuth","register","check_login","obj","check_register","email","user","mobile","description","desc","res","response","props","useState","lName","setLname","lPass","setLpass","rName","setRname","rPass","setRpass","setEmail","setMobile","setUser","setDesc","to","className","placeholder","value","onChange","e","target","onClick","Table","totalData","changePage","changePageData","paginate","i","Math","floor","length","push","class","scope","map","ele","key","id","capacity","price","available","rooms","allrooms","pageNo","setPageNo","noOfData","setNoOfData","indexPrevData","indexCurrData","dataToShow","slice","num","meetingRooms","addRoom","setname","setFloor","setPrice","setCapacity","allData","match","params","room","find","pageNotFound","exact","path","component","render","initialState","authReducer","action","isLoading","meeting","avaiable","meetingReducer","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","App","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f902cad8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS\n} from \"./actionType\";\nimport axios from \"axios\";\n\nconst loginReguest = () => {\n  return {\n    type: LOGIN_REQUEST\n  };\n};\nconst loginSuccess = token => {\n  alert(\"login sucess\");\n  return {\n    type: LOGIN_SUCCESS,\n    payload: token\n  };\n};\nconst loginFailure = message => {\n  alert(\"invalid data\");\n  return {\n    type: LOGIN_FAILURE,\n    payload: message\n  };\n};\n\nconst registerRequest = () => {\n  return {\n    type: REGISTER_REQUEST\n  };\n};\n\nconst registerSuccess = data => {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: data\n  };\n};\n\nexport const login_auth = item => {\n  console.log(item);\n  return dispatch => {\n    dispatch(loginReguest);\n    axios\n      .post(\"http://localhost:8080/auth/login\", {\n        username: item.name,\n        password: item.pass\n      })\n      .then(data => {\n        let token = data.data.token;\n        dispatch(loginSuccess(token));\n      })\n      //   data.token\n      .catch(err => dispatch(loginFailure(\"invalid credentials\")));\n  };\n};\n\nexport const register_auth = item => {\n  console.log(item);\n  return dispatch => {\n    axios\n      .post(\"http://localhost:8080/auth/register\", {\n        name: item.name,\n        email: item.email,\n        username: item.user,\n        password: item.pass,\n        mobile: item.mobile,\n        description: item.desc\n      })\n      .then(res => {\n        const response = res.data.message;\n        dispatch(registerSuccess(response));\n      });\n  };\n};\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\nexport const ADD_NEW_ROOM = \"ADD_NEW_ROOM\";\nexport const SET_ROOMS = \"SET_ROOMS\";\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login_auth } from \"../Redux/authAction\";\nimport { register_auth } from \"../Redux/authAction\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Login(props) {\n  const [lName, setLname] = useState(\"\");\n  const [lPass, setLpass] = useState(\"\");\n  const [rName, setRname] = useState(\"\");\n  const [rPass, setRpass] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  // login\n  const login = () => {\n    let obj = {\n      name: lName,\n      pass: lPass\n    };\n    props.check_login(obj);\n  };\n  const register = () => {\n    let obj = {\n      name: rName,\n      email: email,\n      user: user,\n      pass: rPass,\n      mobile: mobile,\n      desc: desc\n    };\n    props.check_register(obj);\n  };\n  // register\n\n  if (props.auth) {\n    return <Redirect to=\"/\" />;\n  } else {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <h2>Login </h2>\n          <div className=\"col-md-6 m-auto border border-light rounded p-4 \">\n            <input\n              className=\"form-control my-3\"\n              placeholder=\"Enter your Name\"\n              value={lName}\n              onChange={e => setLname(e.target.value)}\n            />\n            <input\n              className=\"form-control my-3\"\n              placeholder=\"Enter Your Password\"\n              value={lPass}\n              type=\"password\"\n              onChange={e => setLpass(e.target.value)}\n            />\n            <button className=\"btn btn-success\" onClick={login}>\n              Login\n            </button>\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <h2>Register</h2>\n          <div className=\"col-md-6 m-auto border border-light rounded p-4 \">\n            <input\n              className=\"form-control my-3\"\n              value={rName}\n              onChange={e => setRname(e.target.value)}\n              placeholder=\"Enter your Name\"\n            />\n            <input\n              className=\"form-control my-3\"\n              placeholder=\"Enter Your Email\"\n              type=\"email\"\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n            />\n            <input\n              value={user}\n              onChange={e => setUser(e.target.value)}\n              className=\"form-control my-3\"\n              placeholder=\"Enter your UserName\"\n            />\n            <input\n              type=\"password\"\n              value={rPass}\n              onChange={e => setRpass(e.target.value)}\n              className=\"form-control my-3\"\n              placeholder=\"Enter Your Password\"\n            />\n            <input\n              type=\"number\"\n              value={mobile}\n              onChange={e => setMobile(e.target.value)}\n              className=\"form-control my-3\"\n              placeholder=\"Enter your Mobile Number\"\n            />\n            <input\n              className=\"form-control my-3\"\n              placeholder=\"Add Description\"\n              value={desc}\n              onChange={e => setDesc(e.target.value)}\n            />\n            <button className=\"btn btn-danger\" onClick={register}>\n              Register\n            </button>\n            <div className=\"col-md-3\">{props.register}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth.isAuth,\n  token: state.auth.token,\n  err: state.auth.err,\n  register: state.auth.register\n});\nconst mapDispatchToProps = dispatch => ({\n  check_login: obj => dispatch(login_auth(obj)),\n  check_register: obj => dispatch(register_auth(obj))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Table({ data, totalData, changePage, changePageData }) {\n  let paginate = [];\n  for (let i = 0; i < Math.floor(totalData.length / data.length); i++) {\n    paginate.push(i);\n  }\n  return (\n    <div>\n      <div className=\"col-md-4 ml-auto\">\n        <select\n          className=\"form-control\"\n          onChange={e => changePageData(e.target.value)}\n        >\n          <option>10</option>\n          <option>20</option>\n          <option>50</option>\n          <option>100</option>\n        </select>\n      </div>\n      <table class=\"table table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Floor</th>\n            <th scope=\"col\">Room Name</th>\n            <th scope=\"col\">Capacity</th>\n            <th scope=\"col\">Rate perday</th>\n            <th scope=\"col\">Status</th>\n            <th scope=\"col\">Book Now</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map(ele => {\n            return (\n              <tr key={ele.id}>\n                <th scope=\"row\">{ele.id}</th>\n                <td>{ele.floor} </td>\n                <td>{ele.name}</td>\n                <td>{ele.capacity}</td>\n                <td>{ele.price}</td>\n                {ele.available ? (\n                  <td className=\"text-success\">Available</td>\n                ) : (\n                  <td className=\"text-danger\">Not Avaialble</td>\n                )}\n                {ele.available ? (\n                  <Link to={`/booking/${ele.name}`}>\n                    <button className=\"text-success btn btn-outline-light\">\n                      Book Now\n                    </button>\n                  </Link>\n                ) : (\n                  <button\n                    className=\"text-muted btn btn-outline-dark\"\n                    onClick={() => alert(\"not available\")}\n                  >\n                    Book Now\n                  </button>\n                )}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      {paginate.map(ele => {\n        return (\n          <button\n            className=\"btn btn-danger m-3\"\n            onClick={() => changePage(ele)}\n          >\n            Page {ele}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Table;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport Table from \"./Table\";\n\nfunction Home({ auth, rooms }) {\n  const [pageNo, setPageNo] = useState(1);\n  const [noOfData, setNoOfData] = useState(10);\n  const indexPrevData = (pageNo - 1) * noOfData;\n  const indexCurrData = pageNo * noOfData;\n  const dataToShow = rooms.slice(indexPrevData, indexCurrData);\n  const changePageData = num => setNoOfData(num);\n\n  const changePage = num => setPageNo(num);\n  if (!auth) {\n    return <Redirect to=\"/login\" />;\n  }\n  return (\n    <div>\n      <div>\n        <div className=\"col-md-5 m-auto p-4\">\n          <input className=\"form-control\" placeholder=\"search meeting rooms \" />\n        </div>\n        <Link to=\"/add\" className=\"text-light\">\n          Add New Meeting Room\n        </Link>\n        <div className=\"col-md-10 m-auto p-4\">\n          <h2>All Meeting Rooms</h2>\n          <Table\n            data={dataToShow}\n            totalData={rooms}\n            changePage={changePage}\n            changePageData={changePageData}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth.isAuth,\n  rooms: state.rooms.allrooms\n});\nconst mapDispatchToProps = dispatch => ({});\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { add_new_room } from \"../Redux/meetingAction\";\n\nfunction AddMeeting({ addRoom, meetingRooms }) {\n  const [name, setname] = useState(\"\");\n  const [floor, setFloor] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [capacity, setCapacity] = useState(\"\");\n\n  const clickhandler = () => {\n    let obj = {\n      id: meetingRooms.length,\n      floor: floor,\n      name: name,\n      price: price,\n      capacity: capacity\n    };\n    addRoom(obj);\n  };\n  return (\n    <div>\n      <h2>Add new Meeting</h2>\n      <div className=\"col-md-8 m-auto p-4 border border-dark rounded\">\n        <input\n          className=\"form-control m-3\"\n          placeholder=\"Enter Meeting Room Name\"\n          onChange={e => setname(e.target.value)}\n        />\n        <input\n          className=\"form-control m-3\"\n          placeholder=\"Enter Floor\"\n          onChange={e => setFloor(e.target.value)}\n        />\n        <input\n          className=\"form-control m-3\"\n          type=\"number\"\n          placeholder=\"Enter Room Capacity\"\n          onChange={e => setCapacity(e.target.value)}\n        />\n        <input\n          className=\"form-control m-3\"\n          type=\"number\"\n          placeholder=\"Price Per Day\"\n          onChange={e => setPrice(e.target.value)}\n        />\n        <button className=\"btn btn-outline-dark\" onClick={clickhandler}>\n          Add Meeting Room\n        </button>\n      </div>\n    </div>\n  );\n}\nconst mapStateToProps = state => ({\n  meetingRooms: state.rooms.allrooms\n});\nconst mapDispatchToProps = dispatch => ({\n  addRoom: item => dispatch(add_new_room(item))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMeeting);\n","import { ADD_NEW_ROOM } from \"./actionType\";\n\nexport const add_new_room = obj => {\n  return {\n    type: ADD_NEW_ROOM,\n    payload: obj\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction BookingPage(props) {\n  let name = props.match.params.name;\n  let room = props.allData.find(ele => {\n    return ele.name == name;\n  });\n  console.log(room);\n  return (\n    <div>\n      <h1>All details</h1>\n      <h4>Name:{room.name}</h4>\n      <h4>Floor:{room.floor}</h4>\n      <h4>Price:{room.price}</h4>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  allData: state.rooms.allrooms\n});\nconst mapDispatchToProps = state => ({});\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingPage);\n","import React from \"react\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport Login from \"../Auth/Login\";\nimport Home from \"../Container/Home\";\nimport AddMeeting from \"../Container/AddMeeting\";\nimport BookingPage from \"../Container/BookingPage\";\nimport { connect } from \"react-redux\";\n\nconst pageNotFound = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"error\">\n        <p className=\"p\">4</p>\n        <span className=\"dracula\">\n          <div className=\"con\">\n            <div className=\"hair\"></div>\n            <div className=\"hair-r\"></div>\n            <div className=\"head\"></div>\n            <div className=\"eye\"></div>\n            <div className=\"eye eye-r\"></div>\n            <div className=\"mouth\"></div>\n            <div className=\"blod\"></div>\n            <div className=\"blod blod2\"></div>\n          </div>\n        </span>\n        <p className=\"p\">4</p>\n\n        <div className=\"page-ms\">\n          <p className=\"page-msg\">\n            Oops, the page you're looking for Disappeared\n          </p>\n          <Link to=\"/\" className=\"go-back btn\">\n            Go Back\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\nfunction Routes({ token }) {\n  return (\n    <div className=\"bg-info p-3\">\n      <h2 className=\" display-5\">The Meeting Room</h2>\n      <ul className=\"nav justify-content-center\">\n        <li className=\"nav-item\">\n          <Link to=\"/\" className=\"text-dark nav-link active\">\n            Home\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/login\" className=\"text-dark nav-link\">\n            Login\n          </Link>\n        </li>\n        {token}\n      </ul>\n      <Switch>\n        <Route exact path=\"/\" component={() => <Home />} />\n        <Route exact path=\"/login\" component={() => <Login />} />\n        <Route\n          exact\n          path=\"/add\"\n          component={props => <AddMeeting {...props} />}\n        />\n        <Route\n          exact\n          path=\"/booking/:name\"\n          component={props => <BookingPage {...props} />}\n        />\n        <Route render={pageNotFound} />\n      </Switch>\n    </div>\n  );\n}\nconst mapStateToProps = state => ({\n  token: state.auth.token\n});\nconst mapDispatchToProps = state => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);\n","import {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  REGISTER_SUCCESS\n} from \"./actionType\";\n\nconst initialState = {\n  isAuth: false,\n  token: [],\n  message: \"\",\n  err: \"\",\n  register: \"\"\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case LOGIN_SUCCESS:\n      console.log(action.payload);\n      return {\n        ...state,\n        isAuth: true,\n        isLoading: false,\n        token: action.payload\n      };\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        err: action.payload\n      };\n\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        register: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { ADD_NEW_ROOM } from \"./actionType\";\nimport meeting from \"../meeting\";\n\nconst initialState = {\n  allrooms: [...meeting],\n  avaiable: []\n};\nconst meetingReducer = (state = initialState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case ADD_NEW_ROOM:\n      return {\n        ...state,\n        allrooms: [...state.allrooms, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default meetingReducer;\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport meetingReducer from \"./meetingReducer\";\n\nexport const rootReducer = combineReducers({\n  auth: authReducer,\n  rooms: meetingReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"./rootReducer\";\n\nexport const store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Routes from \"./routes/Routes\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Redux/store\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}